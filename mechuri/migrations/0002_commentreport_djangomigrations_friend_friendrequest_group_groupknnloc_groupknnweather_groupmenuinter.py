# Generated by Django 3.2.25 on 2024-06-04 12:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mechuri', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('reported_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'friend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'friend_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_uuid', models.CharField(db_collation='utf8_bin', max_length=36)),
                ('name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupKnnLoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_knn_loc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupKnnWeather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp', models.FloatField()),
                ('precip', models.FloatField()),
                ('humid', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_knn_weather',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMenuInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(blank=True, decimal_places=9, max_digits=10, null=True)),
                ('last_interacted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_menu_interaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMenuPeriodicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicity', models.DecimalField(blank=True, decimal_places=9, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_menu_periodicity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_uuid', models.CharField(db_collation='utf8_bin', max_length=36)),
                ('requested_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'group_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('code', models.CharField(max_length=7)),
                ('major', models.CharField(blank=True, max_length=30, null=True)),
                ('middle', models.CharField(blank=True, max_length=30, null=True)),
                ('meal_type', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('sugar', models.FloatField()),
                ('sodium', models.FloatField()),
            ],
            options={
                'db_table': 'nutrient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalKnnLoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_knn_loc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalKnnWeather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp', models.FloatField()),
                ('precip', models.FloatField()),
                ('humid', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_knn_weather',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalMenuInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(blank=True, decimal_places=9, max_digits=10, null=True)),
                ('last_interacted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_menu_interaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalMenuPeriodicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicity', models.DecimalField(blank=True, decimal_places=9, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_menu_periodicity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_uuid', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('title', models.CharField(max_length=45)),
                ('intro_content', models.CharField(blank=True, max_length=45, null=True)),
                ('photo_url', models.CharField(blank=True, max_length=8192, null=True)),
                ('duration', models.TimeField(blank=True, null=True)),
                ('servings', models.IntegerField(blank=True, null=True)),
                ('views', models.SmallIntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_comment_uuid', models.CharField(blank=True, max_length=36, null=True, unique=True)),
                ('content', models.TextField()),
                ('commented_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recipe_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'recipe_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('reported_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recipe_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_no', models.IntegerField()),
                ('content', models.TextField()),
                ('photo_url', models.CharField(blank=True, max_length=8192, null=True)),
            ],
            options={
                'db_table': 'recipe_step',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'recipe_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_uuid', models.CharField(max_length=36, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=150)),
                ('nickname', models.CharField(max_length=15, unique=True)),
                ('joined_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
